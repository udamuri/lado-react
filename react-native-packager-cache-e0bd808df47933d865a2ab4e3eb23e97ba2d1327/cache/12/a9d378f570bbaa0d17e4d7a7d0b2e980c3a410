Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require("react");

var _react3 = _interopRequireDefault(_react2);

var _index = require("./../../../node_modules/react-transform-hmr/lib/index.js");

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = "/home/muri/Documents/react-native/NativeBase-KitchenSink/js/components/list/list-thumbnail.js";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _nativeBase = require("native-base");

var _styles = require("./styles");

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  NHListThumbnail: {
    displayName: "NHListThumbnail"
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: "/home/muri/Documents/react-native/NativeBase-KitchenSink/js/components/list/list-thumbnail.js",
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var sankhadeep = require("../../../img/contacts/sankhadeep.png");
var supriya = require("../../../img/contacts/supriya.png");
var himanshu = require("../../../img/contacts/himanshu.png");
var shweta = require("../../../img/contacts/shweta.png");
var shruti = require("../../../img/contacts/shruti.png");
var shivraj = require("../../../img/contacts/shivraj.jpg");

var datas = [{
  img: sankhadeep,
  text: "Sankhadeep",
  note: "Its time to build a difference . ."
}, {
  img: supriya,
  text: "Supriya",
  note: "One needs courage to be happy and smiling all time . . "
}, {
  img: himanshu,
  text: "Himanshu",
  note: "Live a life style that matchs your vision"
}, {
  img: shweta,
  text: "Shweta",
  note: "Failure is temporary, giving up makes it permanent"
}, {
  img: shruti,
  text: "Shruti",
  note: "The biggest risk is a missed opportunity !!"
}, {
  img: shivraj,
  text: "Shivraj",
  note: "Time changes everything . ."
}];

var NHListThumbnail = _wrapComponent("NHListThumbnail")(function (_Component) {
  _inherits(NHListThumbnail, _Component);

  function NHListThumbnail() {
    _classCallCheck(this, NHListThumbnail);

    return _possibleConstructorReturn(this, (NHListThumbnail.__proto__ || Object.getPrototypeOf(NHListThumbnail)).apply(this, arguments));
  }

  _createClass(NHListThumbnail, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _nativeBase.Container,
        { style: _styles2.default.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 64
          }
        },
        _react3.default.createElement(
          _nativeBase.Header,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 65
            }
          },
          _react3.default.createElement(
            _nativeBase.Left,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            },
            _react3.default.createElement(
              _nativeBase.Button,
              { transparent: true, onPress: function onPress() {
                  return _this2.props.navigation.goBack();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 67
                }
              },
              _react3.default.createElement(_nativeBase.Icon, { name: "arrow-back", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 68
                }
              })
            )
          ),
          _react3.default.createElement(
            _nativeBase.Body,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 72
              }
            },
            _react3.default.createElement(
              _nativeBase.Title,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 73
                }
              },
              "List Thumbnail"
            )
          ),
          _react3.default.createElement(_nativeBase.Right, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 75
            }
          })
        ),
        _react3.default.createElement(
          _nativeBase.Content,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 78
            }
          },
          _react3.default.createElement(_nativeBase.List, {
            dataArray: datas,
            renderRow: function renderRow(data) {
              return _react3.default.createElement(
                _nativeBase.ListItem,
                { thumbnail: true, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 82
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Left,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 83
                    }
                  },
                  _react3.default.createElement(_nativeBase.Thumbnail, { square: true, size: 55, source: data.img, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 84
                    }
                  })
                ),
                _react3.default.createElement(
                  _nativeBase.Body,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 86
                    }
                  },
                  _react3.default.createElement(
                    _nativeBase.Text,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 87
                      }
                    },
                    data.text
                  ),
                  _react3.default.createElement(
                    _nativeBase.Text,
                    { numberOfLines: 1, note: true, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 88
                      }
                    },
                    data.note
                  )
                ),
                _react3.default.createElement(
                  _nativeBase.Right,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 90
                    }
                  },
                  _react3.default.createElement(
                    _nativeBase.Button,
                    { transparent: true, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 91
                      }
                    },
                    _react3.default.createElement(
                      _nativeBase.Text,
                      {
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 92
                        }
                      },
                      "View"
                    )
                  )
                )
              );
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 79
            }
          })
        )
      );
    }
  }]);

  return NHListThumbnail;
}(_react2.Component));

exports.default = NHListThumbnail;