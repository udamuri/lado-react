Object.defineProperty(exports, "__esModule", {
	value: true
});

var _react2 = require("react");

var _react3 = _interopRequireDefault(_react2);

var _index = require("./../../../node_modules/react-transform-hmr/lib/index.js");

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = "/home/muri/Documents/react-native/NativeBase-KitchenSink/js/components/listSwipe/multi-list-swipe.js";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var _styles = require("./styles");

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
	MultiListSwipe: {
		displayName: "MultiListSwipe"
	}
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
	filename: "/home/muri/Documents/react-native/NativeBase-KitchenSink/js/components/listSwipe/multi-list-swipe.js",
	components: _components,
	locals: [module],
	imports: [_react3.default]
});

function _wrapComponent(id) {
	return function (Component) {
		return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
	};
}

var datas = ["Simon Mignolet", "Nathaniel Clyne", "Dejan Lovren", "Mama Sakho", "Alberto Moreno", "Emre Can", "Joe Allen", "Phil Coutinho"];

var MultiListSwipe = _wrapComponent("MultiListSwipe")(function (_Component) {
	_inherits(MultiListSwipe, _Component);

	function MultiListSwipe(props) {
		_classCallCheck(this, MultiListSwipe);

		var _this = _possibleConstructorReturn(this, (MultiListSwipe.__proto__ || Object.getPrototypeOf(MultiListSwipe)).call(this, props));

		_this.ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
				return r1 !== r2;
			} });
		_this.state = {
			basic: true,
			listViewData: datas
		};
		return _this;
	}

	_createClass(MultiListSwipe, [{
		key: "deleteRow",
		value: function deleteRow(secId, rowId, rowMap) {
			rowMap["" + secId + rowId].props.closeRow();
			var newData = [].concat(_toConsumableArray(this.state.listViewData));
			newData.splice(rowId, 1);
			this.setState({ listViewData: newData });
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
					return r1 !== r2;
				} });
			return _react3.default.createElement(
				_nativeBase.Container,
				{ style: _styles2.default.container, __source: {
						fileName: _jsxFileName,
						lineNumber: 54
					}
				},
				_react3.default.createElement(
					_nativeBase.Header,
					{
						__source: {
							fileName: _jsxFileName,
							lineNumber: 55
						}
					},
					_react3.default.createElement(
						_nativeBase.Left,
						{
							__source: {
								fileName: _jsxFileName,
								lineNumber: 56
							}
						},
						_react3.default.createElement(
							_nativeBase.Button,
							{ transparent: true, onPress: function onPress() {
									return _this2.props.navigation.goBack();
								}, __source: {
									fileName: _jsxFileName,
									lineNumber: 57
								}
							},
							_react3.default.createElement(_nativeBase.Icon, { name: "arrow-back", __source: {
									fileName: _jsxFileName,
									lineNumber: 58
								}
							})
						)
					),
					_react3.default.createElement(
						_nativeBase.Body,
						{ style: { flex: 3 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 61
							}
						},
						_react3.default.createElement(
							_nativeBase.Title,
							{
								__source: {
									fileName: _jsxFileName,
									lineNumber: 62
								}
							},
							"Multiple List Swipe"
						)
					),
					_react3.default.createElement(_nativeBase.Right, {
						__source: {
							fileName: _jsxFileName,
							lineNumber: 64
						}
					})
				),
				_react3.default.createElement(
					_nativeBase.Content,
					{
						__source: {
							fileName: _jsxFileName,
							lineNumber: 67
						}
					},
					_react3.default.createElement(_nativeBase.List, {
						dataSource: this.ds.cloneWithRows(this.state.listViewData),
						renderRow: function renderRow(data) {
							return _react3.default.createElement(
								_nativeBase.ListItem,
								{ style: { paddingLeft: 20 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 71
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{
										__source: {
											fileName: _jsxFileName,
											lineNumber: 72
										}
									},
									data
								)
							);
						},
						renderLeftHiddenRow: function renderLeftHiddenRow(data) {
							return _react3.default.createElement(
								_nativeBase.Button,
								{
									full: true,
									onPress: function onPress() {
										return alert(data);
									},
									style: {
										backgroundColor: "#CCC",
										flex: 1,
										alignItems: "center",
										justifyContent: "center"
									},
									__source: {
										fileName: _jsxFileName,
										lineNumber: 77
									}
								},
								_react3.default.createElement(_nativeBase.Icon, { active: true, name: "information-circle", __source: {
										fileName: _jsxFileName,
										lineNumber: 87
									}
								})
							);
						},
						renderRightHiddenRow: function renderRightHiddenRow(data, secId, rowId, rowMap) {
							return _react3.default.createElement(
								_nativeBase.Button,
								{
									full: true,
									danger: true,
									onPress: function onPress(_) {
										return _this2.deleteRow(secId, rowId, rowMap);
									},
									style: {
										flex: 1,
										alignItems: "center",
										justifyContent: "center"
									},
									__source: {
										fileName: _jsxFileName,
										lineNumber: 90
									}
								},
								_react3.default.createElement(_nativeBase.Icon, { active: true, name: "trash", __source: {
										fileName: _jsxFileName,
										lineNumber: 100
									}
								})
							);
						},
						leftOpenValue: 75,
						rightOpenValue: -75,
						__source: {
							fileName: _jsxFileName,
							lineNumber: 68
						}
					})
				)
			);
		}
	}]);

	return MultiListSwipe;
}(_react2.Component));

exports.default = MultiListSwipe;