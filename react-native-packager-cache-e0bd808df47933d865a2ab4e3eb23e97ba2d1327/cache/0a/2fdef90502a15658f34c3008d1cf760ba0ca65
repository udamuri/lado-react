Object.defineProperty(exports, "__esModule", {
	value: true
});
var _jsxFileName = "/home/muri/Documents/react-native/NativeBase-KitchenSink/js/components/listSwipe/multi-list-swipe.js";

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var _styles = require("./styles");

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var datas = ["Simon Mignolet", "Nathaniel Clyne", "Dejan Lovren", "Mama Sakho", "Alberto Moreno", "Emre Can", "Joe Allen", "Phil Coutinho"];

var MultiListSwipe = function (_Component) {
	babelHelpers.inherits(MultiListSwipe, _Component);

	function MultiListSwipe(props) {
		babelHelpers.classCallCheck(this, MultiListSwipe);

		var _this = babelHelpers.possibleConstructorReturn(this, (MultiListSwipe.__proto__ || Object.getPrototypeOf(MultiListSwipe)).call(this, props));

		_this.ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
				return r1 !== r2;
			} });
		_this.state = {
			basic: true,
			listViewData: datas
		};
		return _this;
	}

	babelHelpers.createClass(MultiListSwipe, [{
		key: "deleteRow",
		value: function deleteRow(secId, rowId, rowMap) {
			rowMap["" + secId + rowId].props.closeRow();
			var newData = [].concat(babelHelpers.toConsumableArray(this.state.listViewData));
			newData.splice(rowId, 1);
			this.setState({ listViewData: newData });
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
					return r1 !== r2;
				} });
			return _react2.default.createElement(
				_nativeBase.Container,
				{ style: _styles2.default.container, __source: {
						fileName: _jsxFileName,
						lineNumber: 54
					}
				},
				_react2.default.createElement(
					_nativeBase.Header,
					{
						__source: {
							fileName: _jsxFileName,
							lineNumber: 55
						}
					},
					_react2.default.createElement(
						_nativeBase.Left,
						{
							__source: {
								fileName: _jsxFileName,
								lineNumber: 56
							}
						},
						_react2.default.createElement(
							_nativeBase.Button,
							{ transparent: true, onPress: function onPress() {
									return _this2.props.navigation.goBack();
								}, __source: {
									fileName: _jsxFileName,
									lineNumber: 57
								}
							},
							_react2.default.createElement(_nativeBase.Icon, { name: "arrow-back", __source: {
									fileName: _jsxFileName,
									lineNumber: 58
								}
							})
						)
					),
					_react2.default.createElement(
						_nativeBase.Body,
						{ style: { flex: 3 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 61
							}
						},
						_react2.default.createElement(
							_nativeBase.Title,
							{
								__source: {
									fileName: _jsxFileName,
									lineNumber: 62
								}
							},
							"Multiple List Swipe"
						)
					),
					_react2.default.createElement(_nativeBase.Right, {
						__source: {
							fileName: _jsxFileName,
							lineNumber: 64
						}
					})
				),
				_react2.default.createElement(
					_nativeBase.Content,
					{
						__source: {
							fileName: _jsxFileName,
							lineNumber: 67
						}
					},
					_react2.default.createElement(_nativeBase.List, {
						dataSource: this.ds.cloneWithRows(this.state.listViewData),
						renderRow: function renderRow(data) {
							return _react2.default.createElement(
								_nativeBase.ListItem,
								{ style: { paddingLeft: 20 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 71
									}
								},
								_react2.default.createElement(
									_nativeBase.Text,
									{
										__source: {
											fileName: _jsxFileName,
											lineNumber: 72
										}
									},
									data
								)
							);
						},
						renderLeftHiddenRow: function renderLeftHiddenRow(data) {
							return _react2.default.createElement(
								_nativeBase.Button,
								{
									full: true,
									onPress: function onPress() {
										return alert(data);
									},
									style: {
										backgroundColor: "#CCC",
										flex: 1,
										alignItems: "center",
										justifyContent: "center"
									},
									__source: {
										fileName: _jsxFileName,
										lineNumber: 77
									}
								},
								_react2.default.createElement(_nativeBase.Icon, { active: true, name: "information-circle", __source: {
										fileName: _jsxFileName,
										lineNumber: 87
									}
								})
							);
						},
						renderRightHiddenRow: function renderRightHiddenRow(data, secId, rowId, rowMap) {
							return _react2.default.createElement(
								_nativeBase.Button,
								{
									full: true,
									danger: true,
									onPress: function onPress(_) {
										return _this2.deleteRow(secId, rowId, rowMap);
									},
									style: {
										flex: 1,
										alignItems: "center",
										justifyContent: "center"
									},
									__source: {
										fileName: _jsxFileName,
										lineNumber: 90
									}
								},
								_react2.default.createElement(_nativeBase.Icon, { active: true, name: "trash", __source: {
										fileName: _jsxFileName,
										lineNumber: 100
									}
								})
							);
						},
						leftOpenValue: 75,
						rightOpenValue: -75,
						__source: {
							fileName: _jsxFileName,
							lineNumber: 68
						}
					})
				)
			);
		}
	}]);
	return MultiListSwipe;
}(_react.Component);

exports.default = MultiListSwipe;